#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

# Set up a new ubuntu linux system with my preferred packages.
# Usage: setup-system-ubuntu

echo -e "Starting system setup...\n"

##############
# Programming
##############

echo -e "\n\nPython3 and pip:\n"
sudo apt update
sudo apt install python3-pip

# Wakatime
echo -e "\n\nWakaTime coding metrics:\n"
python3 -m pip install --user wakatime

if [ ! -f ~/.wakatime.cfg ]; then
    echo -e "\n\nWakaTime config file setup:\n"
    read -p "Enter WakaTime API Key: " key
    echo -e """[settings]
debug = false
hidefilenames = false
ignore =
    COMMIT_EDITMSG$
    PULLREQ_EDITMSG$
    MERGE_MSG$
    TAG_EDITMSG$
api_key=$key
""" >~/.wakatime.cfg
fi

# Node.js, TS
echo -e "\n\nNode.js and TypeScript:\n"
curl --fail -LSs https://install-node.now.sh/lts | sudo bash
npm config set prefix '~/.local'
npm i -g typescript ts-node @types/node
npm i -g lodash @types/lodash
npm i -g @swc/core @swc/helpers regenerator-runtime

# Java
echo -e "\n\nJava:\n"
sudo apt install default-jdk

# LaTeX (optional)
read -rep $'\n\nLaTeX [y/n]: ' opt_latex
if [ "$opt_latex" == 'y' ]; then
    echo -e "\nInstalling..."
    sudo apt install texlive texlive-pictures texlive-latex-extra texlive-xetex
    sudo apt install chktex # linter used by ale for vim
else
    echo -e "Skipping...\n"
fi

##########
# Neovim
##########

echo -e "\n\nNeovim and ALE linters/fixers:\n"
sudo add-apt-repository ppa:neovim-ppa/stable
sudo apt update
sudo apt install neovim
python3 -m pip install --user pynvim isort autopep8 flake8
npm i -g prettier @prettier/plugin-xml
sudo apt install shellcheck
curl -sS https://webinstall.dev/shfmt | bash

#################
# Misc. utilities
#################

echo -e "\n\Misc. utilities:\n"

sudo apt install exa
sudo apt install fzf
sudo apt install jq
sudo apt install ripgrep
sudo apt install trash-cli
sudo apt install tldr
sudo apt install zip
npm i -g git-pull-all

wget https://github.com/sharkdp/bat/releases/download/v0.15.4/bat_0.15.4_amd64.deb
sudo dpkg -i bat_0.15.4_amd64.deb
rm -rf bat_0.15.4_amd64.deb

wget https://github.com/dandavison/delta/releases/download/0.11.3/git-delta_0.11.3_amd64.deb
sudo dpkg -i git-delta_0.11.3_amd64.deb
rm -rf git-delta_0.11.3_amd64.deb

# zsh
echo -e "\n\nzsh, oh-my-zsh:\n(Note: \"exit\" from oh-my-zsh to resume setup)\n"
sudo apt install zsh
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
mv ~/.zshrc.pre-oh-my-zsh ~/.zshrc
sudo apt install command-not-found

echo -e "\nSystem setup complete!\n"
