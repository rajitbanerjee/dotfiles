#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

# Run an HTTP request file using curl.
# Usage: rest-client file.http
# Currently supports only single curl header (e.g. Content-Type: application/json)
# Inspired by: ConorHK

case "$1" in
-a | --authenticated)
    auth=true
    shift
    authentication_token="Authorization: Bearer $1"
    shift
    ;;
*)
    auth=false
    authentication_token=""
    ;;
esac

file="$1"
first_line="$(head -n 1 "$file")"
data_requests=("POST" "PATCH" "PUT")

request="$(echo "$first_line" | awk '{print $1;}')"
[[ "${data_requests[*]}" =~ "${request}" ]] && is_data_request=true || is_data_request=false

header="$(sed "2q;d" "$file")"
if [ $auth == true ] && [ $is_data_request == true ]; then
    header="$header
$authentication_token"
fi

data="$(tail -n +4 "$file" | tr '\n' ' ')"
url="$(echo "$first_line" | awk '{print $2;}')"

if [ $is_data_request == true ]; then
    # POST, PATCH, PUT
    command="curl -s -X "$request" -H '"$header"' -d '"$data"' "$url""
else
    # GET, DELETE
    [ $auth == true ] && command="curl -s -X "$request" -H '"$authentication_token"' "$url"" || command="curl -s -X "$request" "$url""
fi

eval "$command"
