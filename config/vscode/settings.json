{
    "[brazilPackageConfig]": {
        "workbench.editor.languageDetection": false
    },
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[dockercompose]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[dockerfile]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    "[gradle]": {
        "editor.codeActionsOnSave": {
            "source.fixAll.spotlessGradle": "explicit"
        },
        "files.trimTrailingWhitespace": false
    },
    "[html]": {
        "editor.defaultFormatter": "vscode.html-language-features"
    },
    "[java]": {
        "editor.defaultFormatter": "redhat.java",
        "editor.detectIndentation": false,
        "editor.indentSize": 4
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[markdown]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[xml]": {
        "editor.defaultFormatter": "DotJoshJohnson.xml"
    },
    "[yaml]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "amazonQ.suppressPrompts": {
        "codeWhispererConnectionExpired": true
    },
    "cSpell.language": "en-US",
    "diffEditor.experimental.showMoves": true,
    "diffEditor.hideUnchangedRegions.enabled": true,
    "diffEditor.ignoreTrimWhitespace": false,
    "editor.accessibilitySupport": "off",
    "editor.codeLensFontFamily": "JetBrainsMono Nerd Font",
    "editor.find.cursorMoveOnType": false,
    "editor.fontFamily": "JetBrainsMono Nerd Font",
    "editor.fontLigatures": true,
    "editor.linkedEditing": true,
    "editor.minimap.enabled": false,
    "editor.stickyScroll.enabled": true,
    "editor.suggestSelection": "first",
    "editor.unicodeHighlight.invisibleCharacters": false,
    "editor.wordWrapColumn": 150,
    "eslint.enable": false,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "extensions.autoUpdate": false,
    "files.associations": {
        "*.gradle": "groovy",
        ".crux_dry_run_build": "plaintext",
        "Config": "brazilPackageConfig"
    },
    "files.autoSave": "afterDelay",
    "files.exclude": {
        "**/*.aux": true,
        "**/*.bcf": true,
        "**/*.iml": true,
        "**/*.run.xml": true,
        "**/*.synctex.gz": true,
        "**/.DS_Store": true,
        "**/.classpath": true,
        "**/.factorypath": true,
        "**/.git": true,
        "**/.hg": true,
        "**/.idea": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.svn": true,
        "**/CVS": true,
        "**/Thumbs.db": true,
        ".bemol": true,
        ".viceroy": true,
        "apollo-overrides": true,
        "build": false,
        "env": true,
        "packageInfo*": true,
        "release-info": true,
        "src/*/build": false
    },
    "files.watcherExclude": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/.hg/store/**": true,
        "**/build/**": true,
        "**/node_modules/*/**": true
    },
    "git-graph.maxDepthOfRepoSearch": 4,
    "git.autofetch": true,
    "git.closeDiffOnOperation": true,
    "git.openRepositoryInParentFolders": "always",
    "git.showActionButton": {
        "commit": true,
        "publish": false,
        "sync": false
    },
    "git.supportCancellation": true,
    "gitblame.ignoreWhitespace": true,
    "gitblame.infoMessageFormat": "${commit.hash} ${commit.summary}",
    "gitblame.inlineMessageFormat": "${author.mail}: ${commit.summary} (${time.ago})",
    "gitblame.inlineMessageNoCommit": "Not committed yet",
    "gitblame.statusBarMessageFormat": "${author.name}: ${commit.hash,6} ${commit.summary} (${time.ago})",
    "java.autobuild.enabled": false,
    "java.debug.settings.showHex": false,
    "java.debug.settings.showQualifiedNames": true,
    "java.import.gradle.enabled": false,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "liveServer.settings.donotShowInfoMsg": true,
    "python.languageServer": "Jedi",
    "redhat.telemetry.enabled": false,
    "remote.SSH.configFile": "/Users/brajit/.ssh/config",
    "scm.defaultViewMode": "tree",
    "scm.diffDecorationsIgnoreTrimWhitespace": "true",
    "scm.repositories.visible": 20,
    "search.exclude": {
        "**/*.code-search": true,
        "**/bower_components": true,
        "**/node_modules": true,
        "build": true,
        "env": true,
        "src/*/build": true
    },
    "search.useGlobalIgnoreFiles": true,
    "search.useParentIgnoreFiles": true,
    "security.promptForRemoteFileProtocolHandling": false,
    "security.workspace.trust.untrustedFiles": "open",
    "telemetry.enableCrashReporter": false,
    "telemetry.enableTelemetry": false,
    "telemetry.telemetryLevel": "off",
    "terminal.integrated.defaultProfile.osx": "zsh",
    "terminal.integrated.enableMultiLinePasteWarning": "never",
    "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",
    "terminal.integrated.inheritEnv": true,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "update.mode": "none",
    "viceroy.__workspace__": {},
    "viceroy.config.autoReloadWorkspaceFolders": false,
    "viceroy.config.beautyMode": false,
    "viceroy.config.internal.lastUpdateTime": "2025-02-17T13:38:02.363Z",
    "viceroy.config.lastVersion": "0.53.201856",
    "viceroy.config.notifyGlibcIssue": false,
    "viceroy.config.notifyMarchAL2Incompatibility": false,
    "viceroy.config.promptForWorkspaceMode": "alwaysMigrate",
    "viceroy.config.setUpCodeWhisperer": false,
    "viceroy.config.setup.amazonQ": false,
    "viceroy.doc.welcome.showAtStartup": false,
    "viceroy.workspaceSyncStrategy": "automatic",
    "vim.enableNeovim": true,
    "vim.neovimUseConfigFile": true,
    "vim.useSystemClipboard": true,
    "vim.vimrc.path": "$HOME/.config/nvim/init.vim",
    "vsicons.dontShowNewVersionMessage": true,
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "workbench.colorCustomizations": {
        "[Gruvbox Dark Hard]": {
            "activityBar.background": "#000000",
            "editor.background": "#000000",
            "editorGroupHeader.tabsBackground": "#000000",
            "sideBar.background": "#000000",
            "statusBar.background": "#000000",
            "tab.activeBackground": "#222222",
            "tab.inactiveBackground": "#000000",
            "terminal.background": "#000000",
            "titleBar.activeBackground": "#000000"
        }
    },
    "workbench.colorTheme": "Gruvbox Dark Hard",
    "workbench.commandPalette.experimental.enableNaturalLanguageSearch": false,
    "workbench.editor.enablePreview": false,
    "workbench.iconTheme": "vscode-icons",
    "workbench.layoutControl.enabled": false,
    "workbench.settings.enableNaturalLanguageSearch": false,
    "yaml.customTags": [
        "!And",
        "!And sequence",
        "!Base64",
        "!If",
        "!If sequence",
        "!Not",
        "!Not sequence",
        "!Equals",
        "!Equals sequence",
        "!Or",
        "!Or sequence",
        "!FindInMap",
        "!FindInMap sequence",
        "!Base64",
        "!Join",
        "!Join sequence",
        "!Cidr",
        "!Ref",
        "!Sub",
        "!Sub sequence",
        "!GetAtt",
        "!GetAZs",
        "!ImportValue",
        "!ImportValue sequence",
        "!Select",
        "!Select sequence",
        "!Split",
        "!Split sequence",
        "!Condition",
        "!Transform",
        "!Transform sequence",
        "!RefSequence",
        "!SubSequence",
        "!GetAZsSequence",
        "!SelectSequence"
    ],
    "yaml.schemas": {
        "file:///local/home/brajit/.vscode-server/extensions/marklel.vscode-brazil-0.53.201856/assets/languages/rde/schema.json": "**/definition.yaml"
    },
    "yaml.validate": true
}