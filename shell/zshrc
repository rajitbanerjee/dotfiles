### General ###

export EDITOR=nvim
export BAT_THEME="gruvbox-dark"
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export MANPAGER='nvim +Man!'
export MANWIDTH=999

### ZSH Settings ###

export PATH=~/bin:/usr/local/bin:$PATH
export ZSH=~/.oh-my-zsh

ZSH_DISABLE_COMPFIX="true" # Skip verification of insecure directories (macOS error)
ENABLE_CORRECTION="true"
ZSH_CUSTOM=~/.zsh/custom

# https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/
plugins=(
	copypath
	docker
    docker-compose
    fzf
	git-prompt
	git-auto-fetch
	nvm
    safe-paste
	tmux
    wakatime
    zsh-autosuggestions
    zsh-completions
    zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

### Prompt ###

unset RPROMPT
ZSH_THEME_GIT_PROMPT_PREFIX="("
ZSH_THEME_GIT_PROMPT_SUFFIX=")"
ZSH_THEME_GIT_PROMPT_SEPARATOR="|"
ZSH_THEME_GIT_PROMPT_BRANCH="%{$fg[white]%}"
ZSH_THEME_GIT_PROMPT_STAGED="%{$fg[white]%}%{●%G%}"
ZSH_THEME_GIT_PROMPT_CONFLICTS="%{$fg[white]%}%{x%G%}"
ZSH_THEME_GIT_PROMPT_CHANGED="%{$fg[white]%}%{+%G%}"
ZSH_THEME_GIT_PROMPT_DELETED="%{$fg[white]%}%{-%G%}"
ZSH_THEME_GIT_PROMPT_BEHIND=" %{$fg[white]%}%{↓%G%}"
ZSH_THEME_GIT_PROMPT_AHEAD=" %{$fg[white]%}%{↑%G%}"
ZSH_THEME_GIT_PROMPT_UNTRACKED="%{$fg[white]%}%{…%G%}"
ZSH_THEME_GIT_PROMPT_STASHED="%{$fg[white]%}%{⚑%G%}"
ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg[white]%}%{✔%G%}"
ZSH_THEME_GIT_PROMPT_UPSTREAM_SEPARATOR="->"

if [ -n "$SSH_CLIENT" ]; then
    ssh_flag="(ssh) "
fi

# %B (%b): Start (stop) boldface
# %F (%f): Start (stop) using a different foreground colour, if supported by the terminal
# %n: Username
# %m: Hostname
# %(5~|%-1~/…/%3~|%4~): Prompt dir. trimming
NEWLINE=$'\n'
setopt PROMPT_SUBST ; PS1='%B%F{100}${ssh_flag}%n@%m:%f%F{66}%(5~|%-1~/…/%3~|%4~)%f%b $(git_super_status "(%s)")${NEWLINE}\$ '

### Dev ###

# Add custom scripts + installed scripts to path
export PATH=~/.local/scripts/bin:$PATH
export PATH=~/.local/bin:$PATH

if [ "$(uname)" = "Linux" ]; then
	# Linuxbrew
	eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

	# Java
	export PATH="/usr/lib/jvm/java-11-amazon-corretto.x86_64/bin:$PATH"
	export JAVA_11_AMAZON_CORRETO_HOME="/usr/lib/jvm/java-11-amazon-corretto.x86_64/"
	export JAVA_HOME=$JAVA_11_AMAZON_CORRETO_HOME
fi

### Aliases ###

# system
alias ..="cd .."
alias cd..="cd .."
alias cdd="cd ~/.dotfiles"
alias chx="chmod +x"
alias cls="clear"
alias cl="cls && l"
alias env="env | sort | less"
alias path="tr ':' '\n' <<<"$PATH" | less"
alias q="exit"
case "$(uname)" in
Darwin)
	alias doc="cd ~/Documents"
	alias dp="cd ~/Desktop"
	alias dow="cd ~/Downloads"
	;;
Linux)
	alias open="xdg-open"
	;;
esac

# aws
alias wp="cd /workplace/brajit"
alias bb="brazil-build"
alias bbb="brazil-recursive-cmd brazil-build --all"
alias bws="brazil ws"
alias bwsm="brazil ws sync -md"

# files
alias less="less -R"
alias mv="mv -i"
alias sizer="du -h * | sort -hr | less"

# exa (a modern replacement for ls)
alias l='exa -l --icons -h --git --no-user'
alias la='l -a'
alias ll='ls -lh'
alias ls='exa'
alias lt='exa -T -L'
alias sl="ls"

# dev
alias n="nvim"
alias jn="jupyter notebook"
alias pip="pip3"

# git
alias ga="git add"
alias gaa="git add --all"
alias gac="git add . && git commit -m"
alias gap="git add --all -p"
alias gb="git branch"
alias gc="git commit"
alias gcm="git commit -m"
alias gca="git commit --amend"
alias gcd="git checkout"
alias gd="git diff"
alias gds="git diff --staged"
alias gl="git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"
alias gpl="git pull"
alias gpla="git-pull-all . -r"
alias gr="git restore"
alias grs="git restore --staged"
alias gs="git status"
alias gsa="find . -name .git -type d -execdir pwd \; -execdir git status \; -execdir echo \; -execdir echo \;"
alias gst='git stash -- $(git diff --staged --name-only)'
alias gsp="git stash pop"
alias gsu="git submodule update --init --recursive"
alias gsur="git submodule update --remote"
alias gu="git reset --soft HEAD~1"

# vs code
alias codex="code --list-extensions"
alias codein="cat ~/.dotfiles/config/vscode/extensions.txt | xargs -L 1 echo code --install-extension | bash"

# docker
alias dc="docker-compose"
alias dcb="docker-compose build"
alias dcu="docker-compose up"
alias dcd="docker-compose down"

### Functions ###

# pretty print a csv file
csv() {
	column -t -s, "$1" | less -S
}

# force set hostname (to prevent network from setting it)
sethost() {
	sudo scutil --set HostName "$1"
}

# convert markdown to pdf
mkpdf() {
	filename="$1"
	base="${filename%.*}"
	pandoc -o $base.pdf --pdf-engine=/Library/TeX/texbin/pdflatex $base.md
	echo "File created: $base.pdf"
}

# TCP ports in use
ports() {
	netstat -Watnlv | grep LISTEN | awk '{"ps -o comm= -p " $9 | getline procname;colred="\033[01;31m";colclr="\033[0m"; print colred "proto: " colclr $1 colred " | addr.port: " colclr $4 colred " | pid: " colclr $9 colred " | name: " colclr procname;  }' | column -t -s "|"
}

# git rebase
grb() {
    git rebase -i "HEAD~$1"
}

### AWS ###

# Toolbox
export PATH=~/.toolbox/bin:$PATH

# AWS CLI completion
complete -C "$(brew --prefix)/bin/aws_completer" aws

if [[ $(uname -n) == dev-dsk* ]]; then
	# Brazil CLI completion
	source ~/.brazil_completion/zsh_completion

	# AWS profiles
	export AWS_CONFIG_FILE=~/workplace/Federate/src/NodeIsengard/profiles/isengardcli
fi

# Added automatically (and periodically, if missing) on cloud desktop
export AWS_EC2_METADATA_DISABLED=true

